{"version":3,"sources":["components/LinkBar.js","components/common/ErrorDisplay.js","components/common/TextInput.js","components/balance/MeasureHeader.js","components/balance/Measure.js","components/balance/BalanceDisplay.js","services/measureService.js","services/measurementService.js","components/hooks/useFetchData.js","components/balance/Balance.js","components/history/MeasureInfo.js","components/common/TableRow.js","components/history/MeasureHistoryTable.js","components/history/MeasureHistory.js","components/hooks/useMultifetchData.js","components/measures/MeasureControl.js","components/measures/MeasuresList.js","components/common/EditForm.js","components/common/TextField.js","helpers/validators.js","helpers/formatters.js","components/create/CreateMeasure.js","components/common/LabeledCheckbox.js","components/edit/EditMeasure.js","components/App.js","index.js"],"names":["LinkBar","props","className","links","map","link","key","to","text","ErrorDisplay","errors","length","error","TextInput","anyErrors","type","value","inputValue","onChange","onTextChange","onKeyUp","e","onSubmit","disabled","onClick","MeasureHeader","measure","id","name","exchangeRatio","valueSum","Measure","handleTextChange","target","isNaN","replace","push","setState","handleSubmit","state","trim","onAddition","parseFloat","this","React","Component","BalanceDisplay","balance","baseUrl","axios","get","measureId","post","alteredMeasure","put","delete","up","amount","useFetchData","callback","useState","data","setData","update","val","undefined","then","res","useEffect","Balance","measureService","measures","updateMeasures","reduce","total","current","handleAddition","addition","measurementService","status","MeasureInfo","TableRow","values","first","last","createCell","index","MeasureHistoryTable","measurements","measurement","effectSum","headers","item","effectValues","helpSum","totals","totalEffects","MeasureHistory","useParams","callbacks","all","spread","find","dat","returnDat","_","useMultifetchData","MeasureControl","window","confirm","onDelete","hasOrderUp","onReorder","hasOrderDown","MeasuresList","handleReorder","isUp","measureCount","handleDelete","EditForm","handleChange","obj","components","forEach","component","editable","formatter","field","stateObject","allValid","headerText","validator","label","submitText","TextField","validName","validFloat","formatFloat","CreateMeasure","redirect","setRedirect","sum","startValue","LabeledCheckbox","EditMeasure","updateMeasure","filteredMeasures","filter","me","reset","fields","promises","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b16fc33.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./LinkBar.css\"\r\n\r\nexport default function LinkBar(props) {\r\n    return <div className=\"linkBar\">\r\n        {props.links.map(link => (\r\n            <Link key={link.link} to={link.link}>\r\n                <div className=\"linkBarItem\">{link.text}</div>\r\n            </Link>))}\r\n    </div>\r\n}","import React from 'react';\r\n\r\nexport default function ErrorDisplay(props) {\r\n    const errors = props.errors\r\n    if(errors == null || errors.length === 0) return null;\r\n\r\n    return (\r\n        <span>\r\n            {props.errors.map(error => (<span key={error}>Virhe: {error}</span>))}\r\n        </span>\r\n    )\r\n}","import React from 'react';\r\nimport \"./TextInput.css\"\r\n\r\nimport ErrorDisplay from \"./ErrorDisplay\"\r\n\r\nexport default function TextInput(props) {\r\n    const errors = props.errors\r\n    const anyErrors = errors.length > 0\r\n\r\n    const onKeyUp = e => {\r\n        if (e.key === \"Enter\") props.onSubmit()\r\n    }\r\n\r\n    return (\r\n    <span className=\"textInput\">\r\n        <input \r\n            type=\"text\" \r\n            value={props.inputValue} \r\n            onChange={props.onTextChange}\r\n            onKeyUp={onKeyUp}\r\n            className={anyErrors ? \"erronous\" : \"\"}/>\r\n        <button disabled={anyErrors} onClick={props.onSubmit}>Lisää</button>\r\n        <ErrorDisplay errors={errors}/>\r\n    </span>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./MeasureHeader.css\"\r\n\r\nexport default function MeasureHeader(props) {\r\n    const measure = props.measure\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Link to={\"/measure/\" + measure.id}><span className=\"nameLabel\">\r\n                    {measure.name}\r\n                </span></Link>\r\n                 - vaihtosuhde: {measure.exchangeRatio}</div>\r\n            <div>Kokonaismäärä (kokonaisvaikutus): {measure.valueSum} ({measure.valueSum * measure.exchangeRatio})</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"./Measure.css\"\r\n\r\nimport TextInput from \"../common/TextInput\"\r\nimport MeasureHeader from \"./MeasureHeader\"\r\n\r\nexport default class Measure extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            inputValue: \"\",\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    handleTextChange = e => {\r\n        const inputValue = e.target.value\r\n        const isNumber = !isNaN(inputValue.replace(\",\", \".\"))\r\n\r\n        const errors = []\r\n        if(!isNumber) errors.push(\"Input ei ole numero\")\r\n\r\n        this.setState({errors, inputValue})\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        const value = this.state.inputValue.replace(\",\", \".\").trim()\r\n        if(value === \"\" || isNaN(value)) return;\r\n\r\n        this.setState({inputValue: \"\", errors: []})\r\n        this.props.onAddition(this.props.measure.id, parseFloat(value))\r\n    }\r\n\r\n    render() {\r\n        const measure = this.props.measure\r\n\r\n        return (\r\n            <div className=\"measure\">\r\n                <MeasureHeader measure={measure}/>\r\n                <TextInput \r\n                    inputValue={this.state.inputValue}\r\n                    errors={this.state.errors}\r\n                    onTextChange={this.handleTextChange}\r\n                    onSubmit={this.handleSubmit}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./BalanceDisplay.css\"\r\n\r\nexport default function BalanceDisplay(props) {\r\n    const balance = props.balance\r\n    return (\r\n        <div className=\"balanceDisplay\">\r\n            Balance: <span className={balance >= 0 ? \"positive\" : \"negative\"}>{balance}</span>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\nconst baseUrl = \"/api/measures/\"\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst get = measureId => {\r\n  return axios.get(baseUrl + measureId)\r\n}\r\n\r\nconst update = alteredMeasure => {\r\n  return axios.put(baseUrl, alteredMeasure)\r\n}\r\n\r\nconst create = measure => {\r\n  return axios.post(baseUrl, measure)\r\n}\r\n\r\nconst reset = measureId => {\r\n  return axios.post(baseUrl + \"reset/\" + measureId)\r\n}\r\n\r\nconst deleteOne = measure => {\r\n  return axios.delete(baseUrl + measure.id)\r\n}\r\n\r\nconst reorder = (measure, up) => {\r\n  return axios.post(baseUrl + \"reorder\", {measureId: measure.id, up})\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  reset,\r\n  deleteOne,\r\n  reorder\r\n}","import axios from 'axios'\r\nconst baseUrl = \"/api/measurements/\"\r\n\r\nconst get = measureId => {\r\n  return axios.get(baseUrl + measureId)\r\n}\r\n\r\nconst create = (measureId, amount) => {\r\n  return axios.post(baseUrl, {measureId: measureId, value: amount})\r\n}\r\n\r\nexport default {\r\n  get,\r\n  create\r\n}","import {useState, useEffect} from 'react';\r\n\r\nexport default function useFetchData(callback) {\r\n  const [data, setData] = useState(null)\r\n\r\n  const update = val => {\r\n    if (val !== undefined) {\r\n      setData(val)\r\n      return\r\n    }\r\n\r\n    callback().then(res=> {\r\n      if(res.data !== null && res.data !== \"\") {\r\n        setData(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(update, [])\r\n\r\n  return [data, update]\r\n}","import React from 'react';\r\n\r\nimport Measure from \"./Measure\"\r\nimport BalanceDisplay from \"./BalanceDisplay\"\r\n\r\nimport measureService from \"../../services/measureService\"\r\nimport measurementService from \"../../services/measurementService\"\r\nimport useFetchData from \"../hooks/useFetchData\"\r\n\r\nexport default function Balance() {\r\n    const [measures, updateMeasures] = useFetchData(() => measureService.getAll())\r\n\r\n    if (measures == null) return <div>Loading</div>\r\n\r\n    const balance = measures.reduce((total, current) => total + (current.valueSum * current.exchangeRatio), 0)\r\n\r\n    const handleAddition = (measureId, addition) => {\r\n        measurementService.create(measureId, addition)\r\n            .then(res => {\r\n                if(res.status === 200) updateMeasures()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BalanceDisplay balance={balance}/>\r\n            <div>\r\n                {measures.map(measure => <Measure \r\n                    key={measure.name} \r\n                    measure={measure}\r\n                    onAddition={handleAddition}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function MeasureInfo(props) {\r\n    const measure = props.measure\r\n    return (\r\n        <div>\r\n            <div>Mittari: {measure.name}</div>\r\n            <div>Vaihtosuhde: {measure.exchangeRatio}</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function TableRow(props) {\r\n    const { values, first, last } = props\r\n\r\n    return (\r\n        <tr>\r\n            {createCell(first)}\r\n            {values.length > 0 ? values.map((value, index) => <td key={index}>{value}</td>) : null}\r\n            {createCell(last)}\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst createCell = value => {\r\n    return value === null || value === undefined\r\n        ? null\r\n        : <td>{value}</td>\r\n}","import React from 'react';\r\n\r\nimport TableRow from \"../common/TableRow\"\r\n\r\nexport default function MeasureHistoryTable(props) {\r\n    const {exchangeRatio, valueSum} = props.measure\r\n    const measurements = props.measurements.map(measurement => measurement.amount)\r\n    const effectSum = valueSum * exchangeRatio\r\n\r\n    const headers = measurements.map((item, index) => \"Transaktio: \" + (index + 1))\r\n\r\n    const values = measurements\r\n    const effectValues = measurements.map(item => item * exchangeRatio)\r\n\r\n    let helpSum = 0\r\n    const totals = measurements.map(item => {\r\n        helpSum += item\r\n        return helpSum\r\n    })\r\n    const totalEffects = totals.map(total => total * exchangeRatio)\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <TableRow values={headers} first=\"\" last=\"Total\"/>\r\n            </thead>\r\n            <tbody>\r\n                <TableRow values={values} first=\"Muutokset\" last={valueSum}/>\r\n                <TableRow values={effectValues} first=\"Reaalimuutokset\" last={effectSum}/>\r\n                <TableRow values={totals} first=\"Kokonaissummat\" last={valueSum}/>\r\n                <TableRow values={totalEffects} first=\"Reaalisummat\" last={effectSum}/>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React from 'react';\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport MeasureInfo from './MeasureInfo';\r\nimport MeasureHistoryTable from \"./MeasureHistoryTable\"\r\n\r\nimport useMultifetchData from \"../hooks/useMultifetchData\"\r\nimport measureService from \"../../services/measureService\"\r\nimport measurementService from \"../../services/measurementService\"\r\n\r\nexport default function MeasureHistory() {\r\n    const measureId = useParams().id\r\n    const [[measure, measurements]] = useMultifetchData(measureService.get(measureId), measurementService.get(measureId))\r\n\r\n    if (measure == null || measurements == null) return <div>Loading</div>\r\n\r\n    return (<div>\r\n        <MeasureInfo measure={measure}/>\r\n        <MeasureHistoryTable measure={measure} measurements={measurements}/>\r\n    </div>)\r\n}","import axios from \"axios\"\r\n\r\nimport useFetchData from \"./useFetchData\"\r\n\r\nexport default function useMultifetchData(...callbacks) {\r\n  // fetches all callbacks, and returns them to useFetch as one pseudo request with either all datas as an array, or as null if some of them didn't return\r\n  const [dat, update] = useFetchData(\r\n    () => axios\r\n      .all(callbacks)\r\n      .then(\r\n        axios.spread((...res) => {\r\n          if (res.find(res => res.data === null || res.data === \"\") !== undefined) {\r\n            return {data: null}\r\n          } else {\r\n            return {data: res.map(res => res.data)}\r\n          }\r\n        })\r\n      )\r\n  )\r\n\r\n  // to make sure the return value is always an array of right length\r\n  const returnDat = dat === null \r\n    ? callbacks.map(_ => null)\r\n    : dat\r\n\r\n  return [returnDat, update]\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./MeasureControl.css\"\r\n\r\nexport default function MeasureControl(props) {\r\n    const measure = props.measure\r\n\r\n    function handleClick(e) {\r\n        const answer = window.confirm(\"Haluatko varmasti poistaa mittarin \\\"\" + measure.name + \"\\\"?\")\r\n        if (answer) props.onDelete(e)\r\n    }\r\n\r\n    return (\r\n        <li className=\"listedMeasure\">\r\n            <Link to={\"/measure/\" + measure.id}>\r\n                {measure.name}\r\n            </Link>\r\n            <Link className=\"listElement\" to={\"/measure/edit/\" + measure.id}>\r\n                Muokkaa\r\n            </Link>\r\n            <span className=\"listElement clickable\" onClick={handleClick}>\r\n                Poista\r\n            </span>\r\n            <span className=\"listElement\">\r\n                Järjestä:\r\n\r\n                {props.hasOrderUp \r\n                    ? (\r\n                    <span className=\"listElementPart clickable\"\r\n                            onClick={e => props.onReorder(measure, true)}>\r\n                        ^\r\n                    </span>\r\n                    )\r\n                    : null\r\n                }\r\n\r\n                {props.hasOrderDown\r\n                    ? (\r\n                    <span className=\"listElementPart clickable\"\r\n                        onClick={e => props.onReorder(measure, false)}>\r\n                        v\r\n                    </span>\r\n                    )\r\n                    : null\r\n                }\r\n            </span>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport measureService from \"../../services/measureService\"\r\n\r\nimport MeasureControl from \"./MeasureControl\"\r\n\r\nimport useFetchData from \"../hooks/useFetchData\"\r\n\r\nexport default function MeasuresList() {\r\n    const [measures, updateMeasures] = useFetchData(() => measureService.getAll())\r\n\r\n    const handleDelete = measure => {\r\n        measureService.deleteOne(measure)\r\n            .then(_ => {\r\n                updateMeasures()\r\n            })\r\n    }\r\n\r\n    const handleReorder = (measure, isUp) => {\r\n        measureService.reorder(measure, isUp)\r\n            .then(_ => {\r\n                updateMeasures()\r\n            })\r\n    }\r\n\r\n    if (measures === null) return \"\"\r\n\r\n    const measureCount = measures.length\r\n\r\n    return (\r\n        <div>\r\n            <h1>Mittarit</h1>\r\n            <Link to=\"/measure/new\">Luo uusi mittari</Link>\r\n            <ul>\r\n                {measures.map((measure, index) => \r\n                    <MeasureControl key={measure.id} \r\n                                    measure={measure}\r\n                                    hasOrderUp={index > 0}\r\n                                    hasOrderDown={index < measureCount - 1}\r\n                                    onDelete={_ => handleDelete(measure)}\r\n                                    onReorder={handleReorder}>\r\n                    </MeasureControl>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default class EditForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const stateObject = {}\r\n        props.components.forEach(component => {\r\n            stateObject[component.field] = component.value\r\n        })\r\n\r\n        this.state = stateObject\r\n    }\r\n\r\n    handleChange = (type, value) => {\r\n        const obj = {}\r\n        obj[type] = value\r\n        this.setState(obj)\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const obj = {}\r\n        this.props.components.forEach(component => {\r\n            if(!component.editable) return;\r\n            \r\n            const formatter = component.formatter\r\n            const value = this.state[component.field]\r\n            obj[component.field] = formatter == null ? value : formatter(value)\r\n        })\r\n\r\n        this.props.onSubmit(obj)\r\n    }\r\n\r\n    render() {\r\n        let allValid = true\r\n\r\n        return (\r\n            <div>\r\n                <h1>{this.props.headerText}</h1>\r\n\r\n                {this.props.components.map(component => {\r\n                    const value = this.state[component.field]\r\n                    const Component = component.Component\r\n\r\n                    if (component.editable) {\r\n                        const error = component.validator(value)\r\n                        allValid = allValid && !error\r\n    \r\n                        return <Component key={component.field}\r\n                                          label={component.label}\r\n                                          value={value}\r\n                                          onChange={val => this.handleChange(component.field, val)}\r\n                                          error={error}/>\r\n                    }\r\n                    \r\n                    return <Component key={component.field}\r\n                                      label={component.label} \r\n                                      value={value}/>\r\n                })}\r\n\r\n                <button disabled={!allValid}\r\n                        onClick={this.handleSubmit}>\r\n                    {this.props.submitText}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport \"./TextField.css\"\r\n\r\nexport default function TextField(props) {\r\n    const {label, value, onChange, error} = props\r\n    return (\r\n        <div className=\"textField\">\r\n            <label>\r\n                <span className=\"fieldLabel\">{label}:</span>\r\n                <input type=\"text\"\r\n                        value={value}\r\n                        onChange={e => onChange(e.target.value)}\r\n                        className={error ? \"erronous\" : \"\"}/>\r\n                {error ? <span className=\"errorMessage\">{error}</span> : null}\r\n            </label>\r\n        </div>\r\n    )\r\n}","export function validName(measures) {\r\n    return name => {\r\n        if(name === null || name === undefined || name.length === 0) return \"Nimi ei saa olla tyhjä\";\r\n\r\n        return measures.find(measure => measure.name === name) == null ? null : \"Mittari \" + name + \" on jo olemassa\"\r\n    }\r\n}\r\n\r\nexport function validFloat(text) {\r\n    if(text === null || text === undefined) return \"Syötä luku\";\r\n\r\n    text = text.replace(\",\", \".\").trim()\r\n\r\n    if(text.length === 0) return \"Syötä luku\"\r\n\r\n    return isNaN(text) ? \"Syötetty teksti ei ole luku\" : null\r\n}","export function formatFloat(text) {\r\n    return parseFloat(text.replace(\",\", \".\").trim())\r\n}","import React, {useState} from 'react';\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport EditForm from \"../common/EditForm\"\r\nimport TextField from \"../common/TextField\"\r\n\r\nimport {validName, validFloat} from \"../../helpers/validators\"\r\nimport {formatFloat} from \"../../helpers/formatters\"\r\n\r\nimport useFetchData from \"../hooks/useFetchData\"\r\nimport measureService from \"../../services/measureService\"\r\n\r\nexport function CreateMeasure() {\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [measures] = useFetchData(() => measureService.getAll())\r\n\r\n    const handleSubmit = obj => {\r\n        const {name, sum, exchangeRatio} = obj\r\n\r\n        const measure = {\r\n            name, exchangeRatio, startValue: sum\r\n        }\r\n        measureService.create(measure)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    setRedirect(true)\r\n                    return\r\n                }\r\n            })\r\n    }\r\n\r\n    if (redirect) return <Redirect to=\"/measures\"/>\r\n    if (measures == null) return (<div>Loading</div>)\r\n\r\n    const components = [\r\n        {\r\n            label: \"Nimi\",\r\n            field: \"name\",\r\n            value: \"\",\r\n            Component: TextField,\r\n            editable: true,\r\n            validator: validName(measures)\r\n        },\r\n        {\r\n            label: \"Vaihtosuhde\",\r\n            field: \"exchangeRatio\",\r\n            value: \"1\",\r\n            Component: TextField,\r\n            editable: true,\r\n            validator: validFloat,\r\n            formatter: formatFloat\r\n        },\r\n        {\r\n            label: \"Alkusumma\",\r\n            field: \"sum\",\r\n            value: \"0\",\r\n            Component: TextField,\r\n            editable: true,\r\n            validator: validFloat,\r\n            formatter: formatFloat\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <EditForm headerText=\"Luo uusi mittari\"\r\n                submitText=\"Luo\"\r\n                onSubmit={handleSubmit}\r\n                components={components}/>\r\n    )\r\n}\r\n\r\nexport default CreateMeasure","import React from 'react';\r\n\r\nexport default function LabeledCheckbox(props) {\r\n    const {label, id, value, onChange, error} = props\r\n    return (\r\n        <div className=\"textField\">\r\n            <label>\r\n                <span className=\"fieldLabel\">{label}:</span>\r\n                <input type=\"checkbox\"\r\n                        id={id}\r\n                        value={value}\r\n                        onChange={e => onChange(e.target.value)}\r\n                        className={error ? \"erronous\" : \"\"}/>\r\n                {error ? <span className=\"errorMessage\">{error}</span> : null}\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useParams, Redirect } from \"react-router-dom\"\r\nimport axios from 'axios'\r\n\r\nimport useFetchData from \"../hooks/useFetchData\"\r\nimport measureService from \"../../services/measureService\"\r\n\r\nimport LabeledText from \"../common/LabeledText\"\r\nimport TextField from \"../common/TextField\"\r\nimport LabeledCheckbox from \"../common/LabeledCheckbox\"\r\nimport EditForm from \"../common/EditForm\"\r\n\r\nimport {validFloat, validName} from \"../../helpers/validators\"\r\nimport {formatFloat} from \"../../helpers/formatters\"\r\n\r\nexport function EditMeasure(){\r\n    const measureId = useParams().id\r\n    const [measure, updateMeasure] = useFetchData(() => measureService.get(measureId))\r\n    const [measures] = useFetchData(() => measureService.getAll())\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    if (redirect) return <Redirect to=\"/measures\"/>\r\n    if (measure == null || measures == null) return <div>Loading</div>\r\n\r\n    const filteredMeasures = measures.filter(me => me.id != measure.id)\r\n\r\n    const handleSubmit = obj => {\r\n        const {reset, ...fields} = obj\r\n        const alteredMeasure = {\r\n            ...measure,\r\n            ...fields\r\n        }\r\n\r\n        const promises = [measureService.update(alteredMeasure)]\r\n        if (reset) promises.push(measureService.reset(measureId))\r\n\r\n        axios.all(promises).then(axios.spread(() => {\r\n            setRedirect(true)\r\n        }))\r\n\r\n        updateMeasure(null)\r\n    }\r\n\r\n    const components = [\r\n        {\r\n            field: \"name\", \r\n            label: \"Nimi\",\r\n            value: measure.name, \r\n            Component: TextField, \r\n            editable: true,\r\n            validator: validName(filteredMeasures)\r\n        },\r\n        {\r\n            field: \"exchangeRatio\", \r\n            label: \"Vaihtosuhde\",\r\n            value: \"\" + measure.exchangeRatio, \r\n            Component: TextField, \r\n            editable: true, \r\n            validator: validFloat,\r\n            formatter: formatFloat\r\n        },\r\n        {\r\n            field: \"reset\",\r\n            label: \"Nollaa\",\r\n            value: false,\r\n            Component: LabeledCheckbox,\r\n            editable: true,\r\n            validator: () => null\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <EditForm headerText=\"Muokkaa mittaria\"\r\n                submitText=\"Päivitä\"\r\n                components={components}\r\n                onSubmit={handleSubmit}/>\r\n    )\r\n}\r\n\r\nexport default EditMeasure","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from \"react-router-dom\"\r\n\r\nimport LinkBar from \"./LinkBar\"\r\nimport Balance from \"./balance/Balance\"\r\nimport MeasureHistory from \"./history/MeasureHistory\"\r\nimport MeasuresList from \"./measures/MeasuresList\"\r\nimport CreateMeasure from \"./create/CreateMeasure\"\r\nimport EditMeasure from \"./edit/EditMeasure\"\r\n\r\nexport default function App () {\r\n    const links = [\r\n        {text: \"Etusivu\", link: \"/\"},\r\n        {text: \"Hallinnoi mittareita\", link: \"/measures\"},\r\n    ]\r\n\r\n    return (\r\n    <Router>\r\n        <LinkBar links={links}/>\r\n\r\n        <Switch>\r\n            <Route path=\"/measure/edit/:id\">\r\n                <EditMeasure/>\r\n            </Route>\r\n            <Route path=\"/measure/new\">\r\n                <CreateMeasure/>\r\n            </Route>\r\n            <Route path=\"/measure/:id\">\r\n                <MeasureHistory/>\r\n            </Route>\r\n            <Route path=\"/measures\">\r\n                <MeasuresList/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n                <Balance/>\r\n            </Route>\r\n        </Switch>\r\n    </Router>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./components/App\"\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}